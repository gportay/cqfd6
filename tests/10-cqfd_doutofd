#!/usr/bin/env bash
#
# validate the behavior of running docker in cqfd using host docker daemon

set -o pipefail

. "$(dirname "$0")/jtest.inc" "$1"
cqfd="$TDIR/.cqfd/cqfd"
read -r -a cqfd_docker <<<"${CQFD_DOCKER:-docker}"
if [ "$CQFD_RUN_WITH_SUDO" = true ]; then
	cqfd_docker=(sudo "${cqfd_docker[@]}")
fi

cd "$TDIR/" || exit 1

jtest_prepare "cqfd run docker using host docker daemon"
if [ "${cqfd_docker[-1]}" != "docker" ] || ! getent group docker | grep -q "$USER"; then
	jtest_result skip
else
	cp -f .cqfdrc .cqfdrc.orig
	cp -f .cqfd/docker/Dockerfile .cqfd/docker/Dockerfile.orig
	cp -f .cqfd/docker/Dockerfile.doutofd .cqfd/docker/Dockerfile
	sed -i -e "/\[build\]/,/^$/s,^command=.*$,command='docker run --rm -t ubuntu:24.04 cat /etc/os-release'," .cqfdrc

	if "$cqfd" init && CQFD_BIND_DOCKER_SOCK=true "$cqfd" | grep -qE 'PRETTY_NAME="Ubuntu 24.04(.[[:digit:]]+)? LTS"'; then
		jtest_result pass
	else
		jtest_result fail
	fi
	# restore .cqfdrc and Dockerfile
	mv -f .cqfdrc.orig .cqfdrc
	mv -f .cqfd/docker/Dockerfile.orig .cqfd/docker/Dockerfile

	# restore container
	if ! "$cqfd" init; then
		jtest_log error "restore container failed"
	fi
fi
