#!/usr/bin/env bash
#
# validate the behavior of dependencies

set -o pipefail

. "$(dirname "$0")/jtest.inc" "$1"
cqfd="$TDIR/.cqfd/cqfd"
read -r -a cqfd_docker <<<"${CQFD_DOCKER:-docker}"
if [ "$CQFD_RUN_WITH_SUDO" = true ]; then
	cqfd_docker=(sudo "${cqfd_docker[@]}")
fi

cd "$TDIR/" || exit 1

################################################################################
# Use a custom Dockerfile
################################################################################
cp -f .cqfd/docker/Dockerfile .cqfd/docker/Dockerfile.orig
cp -f .cqfd/docker/Dockerfile.missing_dependencies .cqfd/docker/Dockerfile

################################################################################
# Missing all core dependencies for the launch script
################################################################################
jtest_prepare "cqfd fails when the Docker image lacks required commands"
if ! "$cqfd" --init; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# Add Bash and the 'shadow' package, which provides useradd, groupadd.
################################################################################
echo 'RUN apk add bash shadow' >>.cqfd/docker/Dockerfile

################################################################################
# cqfd should now be happy with the required commands, using su.
################################################################################
jtest_prepare "cqfd with satisfied command requirements, using su"
if [ "${cqfd_docker[-1]}" = "podman" ]; then
	jtest_result skip
else
	if "$cqfd" --reinit --verbose true \
		| awk -v rc=1 '/Using "su"/ { rc=0 } 1; END {exit rc}'; then
		jtest_result pass
	else
		jtest_result fail
	fi
fi

################################################################################
# Install the sudo package.
################################################################################
echo 'RUN apk add sudo' >>.cqfd/docker/Dockerfile

################################################################################
# cqfd should now be happy with the required commands, using sudo
################################################################################
jtest_prepare "cqfd with satisfied command requirements, using sudo"
if [ "${cqfd_docker[-1]}" = "podman" ]; then
	jtest_result skip
else
	if "$cqfd" --reinit --verbose true \
		| awk -v rc=1 '/Using "sudo"/ { rc=0 } 1; END {exit rc}'; then
		jtest_result pass
	else
		jtest_result fail
	fi
fi

################################################################################
# restore initial Dockerfile
################################################################################
mv -f .cqfd/docker/Dockerfile.orig .cqfd/docker/Dockerfile
jtest_log info "restore container"
if ! "$cqfd" --init; then
	jtest_log error "cqfd --init failed"
fi
