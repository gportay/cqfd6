#!/usr/bin/env bash
#
# validate the sanitization of image name

set -o pipefail

. "$(dirname "$0")/jtest.inc" "$1"
cqfd="$TDIR/.cqfd/cqfd"

cd "$TDIR/" || exit 1

cp -f .cqfdrc .cqfdrc.orig
cat .cqfdrc

################################################################################
# 'cqfd init' creates image with invalid user name should pass
################################################################################
jtest_prepare "cqfd init creates image with invalid user name"
if USER="user@invalid" "$cqfd" init; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# 'cqfd init' creates image with invalid character in project.org should pass
################################################################################
jtest_prepare "cqfd init creates image with invalid character in project.org"
sed -e "s!^org=.*\$!org='savoirfairelinux@invalid'!" .cqfdrc.orig >.cqfdrc
if "$cqfd" init; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# 'cqfd init' creates image with invalid character in project.name should pass
################################################################################
jtest_prepare "cqfd init creates image with invalid character in project.name"
sed -e "s!^name=.*\$!name='test@invalid'!" .cqfdrc.orig >.cqfdrc
if "$cqfd" init; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# Restore initial .cqfdrc and Dockerfile
################################################################################
mv -f .cqfdrc.orig .cqfdrc
