#!/usr/bin/env bash
#
# validate the behavior of project.build_context

. "$(dirname "$0")/jtest.inc" "$1"
cqfd="$TDIR/.cqfd/cqfd"

cd "$TDIR/" || exit 1

################################################################################
# 'cqfd --reinit' without context should fail the context
################################################################################
jtest_prepare "cqfd --reinit without using build_context"
if "$cqfd" --reinit sh -c "! test -e /tmp/cqfdrc-build_context"; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# Now, create a special test context
################################################################################
cp -f .cqfd/docker/Dockerfile .cqfd/docker/Dockerfile.orig
cp -f .cqfd/docker/Dockerfile.build_context .cqfd/docker/Dockerfile
cp -f cqfdrc-build_context .cqfdrc

################################################################################
# 'cqfd --reinit' with context changes the context
################################################################################
jtest_prepare "cqfd --reinit using build_context"
if "$cqfd" --reinit sh -c "test -e /tmp/cqfdrc-build_context"; then
	jtest_result pass
else
	jtest_result fail
fi

################################################################################
# restore initial .cqfdrc and Dockerfile
################################################################################
cp -f cqfdrc-test .cqfdrc
mv -f .cqfd/docker/Dockerfile.orig .cqfd/docker/Dockerfile
