#!/usr/bin/env bash
#
# validate the behavior with extra groups

set -o pipefail

. "$(dirname "$0")/jtest.inc" "$1"
cqfd="$TDIR/.cqfd/cqfd"
read -r -a cqfd_docker <<<"${CQFD_DOCKER:-docker}"
if [ "$CQFD_RUN_WITH_SUDO" = true ]; then
	cqfd_docker=(sudo "${cqfd_docker[@]}")
fi

cd "$TDIR/" || exit 1

################################################################################
# cqfd should add extra_groups provided by an environment variable
################################################################################
jtest_prepare "cqfd should add extra_groups provided by an env variable"
if [ "$USER" = "runner" ] || [ "${cqfd_docker[-1]}" = "podman" ]; then
	jtest_result skip
else
	output=$(user_extra_groups="docker newgroup:12345" "$cqfd" groups | grep docker | grep newgroup)
	if [ -n "$output" ]; then
		jtest_result pass
	else
		jtest_result fail
	fi
fi

################################################################################
# cqfd should add extra_groups provided by the config
################################################################################
jtest_prepare "cqfd should add config's extra_groups to the local user"
if [ "$USER" = "runner" ] || [ "${cqfd_docker[-1]}" = "podman" ]; then
	jtest_result skip
else
	cp -f .cqfdrc .cqfdrc.orig
	echo 'user_extra_groups="docker newgroup:12345"' >>.cqfdrc
	output=$("$cqfd" groups | grep docker | grep newgroup)
	if [ -n "$output" ]; then
		jtest_result pass
	else
		jtest_result fail
	fi
	# restore initial .cqfdrc
	mv -f .cqfdrc.orig .cqfdrc
fi
