#
# Copyright (C) 2017,2023,2025 GaÃ«l PORTAY
#               2017-2025      Savoir-faire Linux, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -z "$BASH_VERSION" ]; then
	_init_completion() {
		:
	}
fi

# This function returns the command
# @param $1 chars  Characters out of $COMP_WORDBREAKS which should
#     NOT be considered word breaks. See __reassemble_comp_words_by_ref.
_get_cmd() {
	local i

	cmd=
	for ((i = 1; i < COMP_CWORD; i++)); do
		if [[ ${COMP_WORDS[i]} =~ --(init|deinit|ls|gc|flavors|exec|run|release|shell|-v|version|-h|help) ]]; then
			cmd=${COMP_WORDS[i]}
			break
		fi
	done
}

_cqfd() {
	local cur prev words cword
	_init_completion || return

	case $prev in
	--platform)
		COMPREPLY=( $( compgen -W "linux/amd64 linux/arm/v6 linux/arm/v7 linux/arm64 linux/ppc64le linux/riscv64 linux/s390x" -- "$cur" ) )
		return
		;;
	-C|--directory|-w|--working-directory|-d|--cqfd-directory)
		_filedir -d
		return
		;;
	-f|--cqfdrc-file)
		_filedir
		return
		;;
	-b|--build)
		local flavors cqfdrc=.cqfdrc
		# before we scan for flavors, see if a cqfdrc name was
		# specified with -f
		for (( i=0; i < ${#words[@]}; i++ )); do
			if [[ ${words[i]} == -f ]]; then
				# eval for tilde expansion
				eval cqfdrc=( "${words[i+1]}" )
			fi
		done

		if [ -e "$cqfdrc" ]; then
			flavors=$(cqfd -f $cqfdrc flavors)
			COMPREPLY=( $(compgen -W "$flavors" -- "$cur") )
		fi
		return
		;;
	--init|--deinit|--ls|--gc|--flavors|-v|--version|-h|--help)
		return
		;;
	esac

	local cmd=
	_get_cmd
	if [[ "$cmd" =~ ^--(exec|run)$ ]]; then
		for (( i=1; i <= cword; i++ )); do
			if [[ ${words[i]} == "$cmd" ]]; then
				if [[ $((i+1)) -eq $cword ]]; then
					break
				elif [[ ${words[i+1]} == -c ]]; then
					((i++))
				fi
				_command_offset $((i + 1))
				return
			fi
		done

		if [[ "$cmd" == --exec ]]; then
			COMPREPLY=( $(compgen -c -- "$cur") )
		else
			COMPREPLY=( $(compgen -c -W "-c" -- "$cur") )
		fi
		return
	elif [[ "$cmd" == --shell ]]; then
		for (( i=1; i <= cword; i++ )); do
			if [[ ${words[i]} == "$cmd" ]]; then
				((i++))
				break
			fi
		done

		COMP_WORDS=("${SHELL:-/bin/sh}" "${COMP_WORDS[@]:$i}" "$cur")
		COMP_LINE="${COMP_WORDS[*]}"
		COMP_POINT="${#COMP_LINE}"
		_command_offset 0
		return
	fi

	local opts="-C --directory -w --working-directory -d --cqfd-directory -f --cqfdrc-file -b --build -q --quiet --reinit --release --platform"
	local cmds="--init --deinit --ls --gc --flavors --exec --run --shell -v --version -h --help"
	COMPREPLY=( $(compgen -W "$cmds $opts" -- "$cur") )
} &&
complete -F _cqfd cqfd linux-amd64-cqfd linux-arm-cqfd linux-arm64-cqfd linux-ppc64le-cqfd linux-riscv64-cqfd linux-s390x-cqfd cqfd6
