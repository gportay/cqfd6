#
# Copyright (C) 2017,2023,2025 GaÃ«l PORTAY
#               2017-2025      Savoir-faire Linux, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -z "$BASH_VERSION" ]; then
	_init_completion() {
		:
	}
	_get_first_arg() {
		:
	}
fi

_cqfd() {
	local cur prev words cword
	_init_completion || return

	case $prev in
	-C|-w|-d)
		_filedir -d
		return
		;;
	-f)
		_filedir
		return
		;;
	-b)
		local flavors cqfdrc=.cqfdrc
		# before we scan for flavors, see if a cqfdrc name was
		# specified with -f
		for (( i=0; i < ${#words[@]}; i++ )); do
			if [[ ${words[i]} == -f ]]; then
				# eval for tilde expansion
				eval cqfdrc=( "${words[i+1]}" )
			fi
		done

		if [ -e "$cqfdrc" ]; then
			flavors=$(cqfd -f $cqfdrc flavors)
			COMPREPLY=( $(compgen -W "$flavors" -- "$cur") )
		fi
		return
		;;
	--init|--flavors|--release|--help)
		return
		;;
	esac

	local arg=
	_get_first_arg
	if [ "$arg" ]; then
		for (( i=1; i <= cword; i++ )); do
			if [[ ${words[i]} == "$arg" ]]; then
				if [[ $((i+1)) -eq $cword ]]; then
					break
				fi
				_command_offset $((i + 1))
				return
			fi
		done

		COMPREPLY=( $(compgen -c -- "$cur") )
		return
	fi

	local opts="-C -w -d -f -b -q --reinit --release -v --version -h --help"
	local cmds="--init --deinit --ls --gc --flavors"
	if [[ "$cur" == -* ]]; then
		COMPREPLY=( $(compgen -W "$cmds $opts" -- "$cur") )
		return
	fi
} &&
complete -F _cqfd cqfd cqfd6
